# deploy repo to cloud
name: Push to Azure Container Registry
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set small sha variable
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Check variable
        run: |
          echo "SHA short: ${{ env.sha_short }}"

      - name: Set up Node.js

        uses: actions/setup-node@v3
        with:
          node-version: 18 # Adjust to your Node.js version

      - name: Install dependencies in the cloned repository
        working-directory: ./client
        run: npm install

      #   - name: Remove current env if it exists
      #     working-directory: ./client
      #     run: |
      #       if [ -f .env ]; then
      #         rm .env
      #       fi

      #   - name: Create .env file for client
      #     working-directory: ./client
      #     run: echo "VITE_API_PATH=''" > .env

      - name: Run npm build in the cloned repository
        working-directory: ./client
        run: npm run build # Adjust to your build command
        env:
          CI: false

      - name: Remove existing dist folder in server directory
        run: rm -rf server/dist

      - name: Remove existing assets folder in server directory
        run: rm -rf server/assets

      - name: Copy dist folder from client to server directory
        run: cp -r client/dist server

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "login to az docker"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: "Push docker image"
        working-directory: ./server
        run: |
          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/runclub:${{ env.sha_short }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/runclub:${{ env.sha_short }}

      #   - name: Deploy to Azure Web App
      #     uses: azure/webapps-deploy@v2
      #     with:
      #       app-name: "fantasy-xc-v2"
      #       images: "${{ secrets.REGISTRY_LOGIN_SERVER }}/runclub:${{ env.sha_short }}"

      - name: Sign out of Azure
        run: |
          az logout
